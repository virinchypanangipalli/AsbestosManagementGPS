import type { ICdsCompiler, XsnArtifact, XsnElement, XsnFinalEffectiveType, XsnNamedObject, XsnObject, XsnOriginatedObject, XsnDependency, XsnUsing, XsnNamespace } from '@sap/cds-compiler-types';
import type { MetadataElement } from '@sap-ux/odata-annotation-core-types';
import type { Reference, Namespace } from '@sap-ux/odata-annotation-core';
import type { CdsCompilerFacade } from '../facade';
export declare class Converter {
    private facade;
    private compiler?;
    constructor(compiler: ICdsCompiler, facade: CdsCompilerFacade | undefined);
    convertNamespaceToNamespaces(namespace: XsnNamespace): Namespace;
    convertUsingsToNamespaces(usings: ReadonlyArray<XsnUsing>, dependencies: ReadonlyArray<XsnDependency>): Reference[];
    getNameObj(artifact?: XsnNamedObject | XsnFinalEffectiveType): any;
    convertArtifact: (artifact: XsnArtifact) => MetadataElement;
    convertElement: (elementName: string, parentPath: string, element: XsnElement | undefined) => MetadataElement[];
    convertBoundAction: (entityName: string, actionName: string, action: XsnElement) => MetadataElement;
    convertParameter: (paramName: string, parentPath: string, parameter: XsnElement | undefined) => MetadataElement | undefined;
    convertBindingParameter: (action: XsnObject | undefined, bindingEntity: XsnArtifact, parentPath: string) => MetadataElement;
    convertReturnParameter: (action: XsnObject | undefined, parentPath: string) => MetadataElement | undefined;
    convertDraftPropertyNode: (xsnObject: XsnOriginatedObject, propName: string, parentPath: string | undefined) => MetadataElement;
    convertEntitySetNode: (entitySetName: string, parentPath: string, entity: XsnArtifact | undefined) => MetadataElement;
    convertActionFunctionImportNode: (actionFunctionName: string, parentPath: string, actionOrFunctionFqName: string | undefined, actionOrFunction: XsnArtifact) => MetadataElement;
    convertNameToEdmx(name: string | undefined): string | undefined;
    convertNameFromEdmx(name: string | undefined): string | undefined;
    private collectElementsFromStructuredType;
    private getPrimitiveType;
    private setStructuredType;
    /**
     * Get OData target kinds for a metadata element.
     *
     * @param metadata element.
     * @returns OData target kinds.
     */
    private getEdmTargetKinds;
    private buildNode;
    private getNamespace;
    private getOrigin;
    private getRecursiveOrigin;
    /**
     * Adapt file path for node module path
     *
     * Cut file path at first node_module
     * filePath "..\..\..\Users\my_user\AppData\Roaming\npm\node_modules\@sap\cds-dk\node_modules\@sap\cds\common.cds"
     *
     * @param location - generic location
     *
     * @returns filePath
     */
    private adaptFilePath;
    private getStructuredType;
    private getActionNodeSignature;
    private getKeyNamesAndTypes;
    private getElementName;
    private getActionOrFunctionParams;
    private getAssociationKeyFieldElements;
    private convertUsingToNamespace;
    private convertDependencyToNamespace;
}
//# sourceMappingURL=conversion.d.ts.map