/// <reference types="@sapui5/types" />
/// <reference types="@sapui5/types" />
import type { ButtonType } from 'sap/m/library';
import type { URI } from 'sap/ui/core/library';
/**
 * Actions
 * @isViewNode true
 */
export interface Actions {
    [key: string]: Action;
}
/**
 * Action
 * @isViewNode true
 */
export interface Action {
    /**
     * The text of the button tooltip, preferably as an i18n key.
     * @i18nClassification ACT: Text for tooltip of button.
     */
    tooltip?: string;
    /**
     * An icon to be displayed as a graphical element within the button. This can be an image or an icon from the icon font (https://ui5.sap.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html#/overview/SAP-icons), represented as RFC 3986 conformant URI.
     */
    icon?: URI;
    /**
     * An alternative icon for the active (depressed) state of the button. This can be an image or an icon from the icon font (https://ui5.sap.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html#/overview/SAP-icons), represented as RFC 3986 conformant URI.
     */
    activeIcon?: URI;
    /**
     * Defines the Button type.
     */
    type?: ButtonType;
}
/**
 * Form Action
 * @isViewNode true
 */
export interface FormAction extends Action {
    /**
     * Allows you to define if the action button is visible on the screen.
     */
    visible?: boolean;
}
/**
 * Header Action
 * @isViewNode true
 */
export interface ObjectPageHeaderAction extends Action {
    /**
     * Allows you to define if the action button is visible on the screen.
     */
    visible?: boolean;
}
/**
 * ToolBar Action
 * @isViewNode true
 */
export interface ObjectPageToolBarAction extends Action {
    /**
     * Allows you to define if the action button is visible on the screen.
     */
    visible?: boolean;
}
/**
 * Footer Action
 * @isViewNode true
 */
export interface ObjectPageFooterAction extends Action {
    /**
     * Allows you to define if the action button is visible on the screen.
     */
    visible?: boolean;
}
/**
 * Standard Action
 * @isViewNode true
 */
export interface StandardAction {
    /**
     * Allows you to define if the button is visible on the screen.
     */
    visible?: boolean;
}
/**
 * Share
 * @isViewNode true
 */
export interface Share extends StandardAction {
}
/**
 * Share
 * @isViewNode true
 */
export interface ShareOP extends StandardAction {
}
/**
 * Up and Down Navigation
 * @isViewNode true
 */
export interface UpAndDownNavigationOP extends StandardAction {
}
/**
 * Save and Edit
 * @isViewNode true
 */
export interface SaveAndEditOP extends StandardAction {
}
export interface HeaderActionsStandard {
    Share?: Share;
}
export interface ObjectPageHeaderActionsStandard {
    UpAndDownNavigation?: UpAndDownNavigationOP;
    Share?: ShareOP;
}
export interface ObjectPageFooterActionsStandard {
    SaveAndEdit?: SaveAndEditOP;
}
export interface HeaderActionStandard extends StandardAction {
}
export interface ObjectPageHeaderActionStandard extends StandardAction {
}
export interface ObjectPageFooterActionStandard extends StandardAction {
}
//# sourceMappingURL=Action.d.ts.map