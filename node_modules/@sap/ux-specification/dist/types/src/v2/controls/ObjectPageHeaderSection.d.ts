import type { ObjectPageCustomSectionFragment } from './ObjectPageSection';
export interface CommonHeaderFacetSettings {
    /**
     * Specifies whether the facet is visible or not
     */
    visible?: boolean;
}
export type ObjectPageHeaderSectionForm = CommonHeaderFacetSettings;
export type ObjectPageHeaderSectionAddress = CommonHeaderFacetSettings;
export type ObjectPageHeaderSectionChart = CommonHeaderFacetSettings;
export type ObjectPageHeaderSectionDataPoint = CommonHeaderFacetSettings;
/**
 * Subsection
 * @isViewNode true
 */
export interface ObjectPageHeaderSection {
    subsections?: HeaderSections;
}
/**
 * Header Sections
 * @isViewNode true
 */
export interface HeaderSections {
    [key: string]: ObjectPageHeaderSection | ObjectPageHeaderSectionForm | ObjectPageHeaderSectionChart | ObjectPageHeaderSectionDataPoint | ObjectPageHeaderSectionAddress | ObjectPageCustomHeaderSectionFragment;
}
/**
 * Custom Section fragment
 * @isViewNode true
 */
export interface ObjectPageCustomHeaderSectionFragment extends Omit<ObjectPageCustomSectionFragment, 'actions'>, CommonHeaderFacetSettings {
}
//# sourceMappingURL=ObjectPageHeaderSection.d.ts.map