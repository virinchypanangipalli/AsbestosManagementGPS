"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChartType = void 0;
var ChartType;
(function (ChartType) {
    ChartType["bar"] = "bar";
    ChartType["column"] = "column";
    ChartType["line"] = "line";
    ChartType["combination"] = "combination";
    ChartType["pie"] = "pie";
    ChartType["donut"] = "donut";
    ChartType["scatter"] = "scatter";
    ChartType["bubble"] = "bubble";
    ChartType["heatmap"] = "heatmap";
    ChartType["bullet"] = "bullet";
    ChartType["verticalBullet"] = "vertical_bullet";
    ChartType["stackedBar"] = "stacked_bar";
    ChartType["stackedColumn"] = "stacked_column";
    ChartType["stackedCombination"] = "stacked_combination";
    ChartType["horizontalStackedCombination"] = "horizontal_stacked_combination";
    ChartType["dualBar"] = "dual_bar";
    ChartType["dualColumn"] = "dual_column";
    ChartType["dualLine"] = "dual_line";
    ChartType["dualStackedBar"] = "dual_stacked_bar";
    ChartType["dualStackedColumn"] = "dual_stacked_column";
    ChartType["dualCombination"] = "dual_combination";
    ChartType["dualStackedCombination"] = "dual_stacked_combination";
    ChartType["dualHorizontalCombination"] = "dual_horizontal_combination";
    ChartType["dualHorizontalStackedCombination"] = "dual_horizontal_stacked_combination";
    ChartType["hundredStackedBar"] = "100_stacked_bar";
    ChartType["hundredStackedColumn"] = "100_stacked_column";
    ChartType["hundredDualStackedBar"] = "100_dual_stacked_bar";
    ChartType["hundredDualStackedColumn"] = "100_dual_stacked_column";
    ChartType["waterfall"] = "waterfall";
    ChartType["horizontalWaterfall"] = "horizontal_waterfall";
})(ChartType || (exports.ChartType = ChartType = {}));
//# sourceMappingURL=AnalyticalListPageChart.js.map