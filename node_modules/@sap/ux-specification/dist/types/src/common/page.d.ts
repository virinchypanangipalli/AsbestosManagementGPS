import type { FlexibleColumnLayoutType, ManifestSettingsType } from './types';
export declare enum PageTypeV2 {
    ObjectPage = "ObjectPage",
    ListReport = "ListReport",
    OverviewPage = "OverviewPage",
    CustomPage = "CustomPage",
    AnalyticalListPage = "AnalyticalListPage"
}
export declare enum PageTypeV4 {
    ObjectPage = "ObjectPage",
    ListReport = "ListReport",
    CustomPage = "CustomPage",
    FPMCustomPage = "FPMCustomPage",
    AnalyticalListPage = "AnalyticalListPage"
}
export declare const PageType: {
    ObjectPage: PageTypeV4.ObjectPage;
    ListReport: PageTypeV4.ListReport;
    CustomPage: PageTypeV4.CustomPage;
    FPMCustomPage: PageTypeV4.FPMCustomPage;
    AnalyticalListPage: PageTypeV4.AnalyticalListPage;
    OverviewPage: PageTypeV2.OverviewPage;
};
export type PageType = typeof PageType;
export declare const PAGETYPE_VIEW_EXTENSION_TEMPLATE_MAP: Map<PageTypeV2, string>;
export interface PageConfig {
    $schema?: string;
}
export interface CustomPageConfig extends PageConfig {
    $filePath?: string;
}
export interface PageBase {
    name?: string;
    entitySet?: string;
    contextPath?: string;
    navigationProperty?: string;
    config?: PageConfig;
    navigation?: {
        [property: string]: string | object;
    };
    variantManagement?: string;
    defaultLayoutType?: FlexibleColumnLayoutType;
}
export declare enum FioriElementsVersion {
    v2 = "v2",
    v4 = "v4"
}
export declare enum OdataVersion {
    v2 = "v2",
    v4 = "v4"
}
export interface Target {
    fioriElements?: FioriElementsVersion;
    odata?: OdataVersion;
}
export interface PagesBase {
    [key: string]: PageBase;
}
export interface SapUiGenericAppPageSettings {
    [key: string]: ManifestSettingsType;
}
export interface SapUiGenericAppPage {
    entitySet: string;
    navigationProperty?: string;
    component: {
        name: string;
        settings?: SapUiGenericAppPageSettings;
    };
    pages?: SapUiGenericAppPage[] | {
        [pageId: string]: SapUiGenericAppPage;
    };
}
export interface SapUiGenericAppPageMap {
    [key: string]: SapUiGenericAppPage;
}
export interface SapUiGenericApp {
    pages: SapUiGenericAppPage[] | SapUiGenericAppPageMap;
    _version?: string;
    settings?: object;
}
//# sourceMappingURL=page.d.ts.map