"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.run = exports.FPM_CUSTOM_PAGE_GENERIC_SCHEMA_NAME = void 0;
const fs_1 = __importDefault(require("fs"));
const path_1 = require("path");
const package_json_1 = __importDefault(require("../../package.json"));
const api_1 = require("./api");
const schema_1 = require("./schema");
exports.FPM_CUSTOM_PAGE_GENERIC_SCHEMA_NAME = 'BuildingBlocksConfig.json';
const CmdParams = {
    // Use nighly build api version
    nightlyBuild: '--nightly',
    // Overwrite cache
    overwriteCache: '--update'
};
/**
 * Run command to generate macros generic schema by resolving "sap.fe.macros" api.json.
 * @param {string[]} argv Additional arguments for API retrieval and schema generation. Currently we support '--nightly' and '--update'.
 */
async function run(argv) {
    const api = await (0, api_1.getMacrosAPI)(package_json_1.default.version, argv.includes(CmdParams.nightlyBuild), argv.includes(CmdParams.overwriteCache));
    if (api) {
        // Generate generic schema for macros
        const schema = (0, schema_1.generateSchema)(api);
        // Make sure schemas/v4 folders exists
        const rootName = (0, path_1.join)(__dirname, '..', '..');
        const schemasDir = (0, path_1.join)(rootName, 'schemas');
        const schemaV4Dir = (0, path_1.join)(schemasDir, 'v4');
        const macrosSchemaPath = (0, path_1.join)(schemaV4Dir, exports.FPM_CUSTOM_PAGE_GENERIC_SCHEMA_NAME);
        if (!fs_1.default.existsSync(schemasDir)) {
            fs_1.default.mkdirSync(schemasDir);
        }
        if (!fs_1.default.existsSync(schemaV4Dir)) {
            fs_1.default.mkdirSync(schemaV4Dir);
        }
        // Write generic macros schema file
        fs_1.default.writeFile(macrosSchemaPath, JSON.stringify(schema, null, 2), function (error) {
            const message = error
                ? `Save for ${exports.FPM_CUSTOM_PAGE_GENERIC_SCHEMA_NAME} failed with error "${error}"`
                : `${exports.FPM_CUSTOM_PAGE_GENERIC_SCHEMA_NAME} file successfully saved`;
            console.log(message);
        });
    }
}
exports.run = run;
//# sourceMappingURL=cmd.js.map