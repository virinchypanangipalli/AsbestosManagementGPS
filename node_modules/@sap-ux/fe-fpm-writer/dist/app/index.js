"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.enableFPM = exports.MIN_VERSION = void 0;
const mem_fs_1 = require("mem-fs");
const mem_fs_editor_1 = require("mem-fs-editor");
const path_1 = require("path");
const semver_1 = require("semver");
const project_access_1 = require("@sap-ux/project-access");
const defaults_1 = require("../common/defaults");
const templates_1 = require("../templates");
const utils_1 = require("../common/utils");
exports.MIN_VERSION = '1.94.0';
/**
 * If a minUI5Version is set and it is smaller than the minimum required, increase it.
 *
 * @param {Manifest} manifest - content of the mnaifest.json
 * @param {Editor} fs - the mem-fs editor instance
 * @param {string} manifestPath - path to the manifest.json file
 */
function adaptMinUI5Version(manifest, fs, manifestPath) {
    const minUI5VersionArray = (0, project_access_1.getMinUI5VersionAsArray)(manifest, true);
    if (minUI5VersionArray?.length > 0) {
        let update = false;
        for (let index = 0; index < minUI5VersionArray.length; index++) {
            const minUI5Version = minUI5VersionArray[index];
            if (minUI5Version && (0, semver_1.valid)(minUI5Version) && (0, semver_1.lt)(minUI5Version, exports.MIN_VERSION)) {
                minUI5VersionArray[index] = exports.MIN_VERSION;
                update = true;
            }
        }
        if (update) {
            if (minUI5VersionArray.length === 1) {
                fs.extendJSON(manifestPath, {
                    'sap.ui5': {
                        dependencies: {
                            minUI5Version: minUI5VersionArray[0]
                        }
                    }
                });
            }
            else if (minUI5VersionArray.length > 1) {
                fs.extendJSON(manifestPath, {
                    'sap.ui5': {
                        dependencies: {
                            minUI5Version: minUI5VersionArray
                        }
                    }
                });
            }
        }
    }
}
/**
 * Enable the flexible programming model for an application.
 *
 * @param {string} basePath - the base path
 * @param {FPMConfig} config - the FPM configuration
 * @param {Editor} [fs] - the mem-fs editor instance
 * @returns {Promise<Editor>} the updated mem-fs editor instance
 */
function enableFPM(basePath, config = {}, fs) {
    if (!fs) {
        fs = (0, mem_fs_editor_1.create)((0, mem_fs_1.create)());
    }
    const manifestPath = (0, path_1.join)(basePath, 'webapp/manifest.json');
    if (!fs.exists(manifestPath)) {
        throw new Error(`Invalid project folder. Cannot find required file ${manifestPath}`);
    }
    const manifest = fs.readJSON(manifestPath);
    // add FE libs is not yet added
    if (!manifest['sap.ui5']?.dependencies?.libs?.['sap.fe.templates']) {
        fs.extendJSON(manifestPath, {
            'sap.ui5': {
                dependencies: {
                    libs: {
                        'sap.fe.templates': {}
                    }
                }
            }
        });
    }
    // if a minUI5Version is set and it is smaller than the minimum required, increase it
    adaptMinUI5Version(manifest, fs, manifestPath);
    // add type extensions if required
    if (config.typescript) {
        (0, utils_1.addExtensionTypes)(basePath, (0, project_access_1.getMinimumUI5Version)(manifest), fs);
    }
    // enable FCL if requested
    if (config.fcl) {
        fs.extendJSON(manifestPath, {
            'sap.ui5': {
                rootView: {
                    viewName: 'sap.fe.templates.RootContainer.view.Fcl',
                    type: 'XML',
                    async: true,
                    id: 'appRootView'
                },
                routing: {
                    config: {
                        routerClass: defaults_1.FCL_ROUTER
                    }
                }
            }
        });
    }
    // replace Component.js
    if (config.replaceAppComponent) {
        const ext = config.typescript ? 'ts' : 'js';
        const componentTemplate = (0, templates_1.getTemplatePath)(`/app/Component.${ext}`);
        fs.copyTpl(componentTemplate, (0, path_1.join)(basePath, `webapp/Component.${ext}`), manifest['sap.app']);
    }
    return fs;
}
exports.enableFPM = enableFPM;
//# sourceMappingURL=index.js.map