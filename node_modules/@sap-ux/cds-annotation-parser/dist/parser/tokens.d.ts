export declare const DEFAULT_MODE = "default_mode";
export declare const QUOTED_IDENTIFIER_MODE = "quoted_mode";
export declare const STRING_MODE = "string_mode";
export declare const MULTI_LINE_STRING_MODE = "multi_line_string_mode";
export declare const MULTI_LINE_STRING_STRIP_INDENT_MODE = "multi_line_string_strip_indent_mode";
export declare const DELIMITED_IDENTIFIER_MODE = "delimited_mode";
export declare const EXPRESSION_MODE = "expression_mode";
export declare const QUOTED_IDENTIFIER_TOKEN_TYPE = "QuotedIdentifier";
export declare const QUOTED_IDENTIFIER_EXIT_TOKEN_TYPE = "QuotedIdentifierExit";
export declare const DELIMITED_IDENTIFIER_TOKEN_TYPE = "DelimitedIdentifier";
export declare const DELIMITED_IDENTIFIER_EXIT_TOKEN_TYPE = "DelimitedIdentifierExit";
export declare const TERM_CAST_IDENTIFIER_TOKEN_TYPE = "TermCastIdentifier";
export declare const IDENTIFIER_TOKEN_TYPE = "Identifier";
export declare const BACKTICK_TOKEN_TYPE = "Backtick";
export declare const TRIPLE_BACKTICK_TOKEN_TYPE = "TripleBacktick";
export declare const MULTI_LINE_STRING_EXIT_TOKEN_TYPE = "MultiLineStringExit";
export declare const MULTI_LINE_STRING_TOKEN_TYPE = "MultiLineString";
export declare const MULTI_LINE_STRING_STRIP_INDENT_EXIT_TOKEN_TYPE = "MultiLineStringStripIndentExit";
export declare const STRING_TOKEN_TYPE = "String";
export declare const STRING_EXIT_TOKEN_TYPE = "StringExit";
export declare const COMMENT_TOKEN_TYPE = "Comment";
export declare const LINE_COMMENT_TOKEN_TYPE = "LineComment";
export declare const NUMBER_SIGN_TOKEN_TYPE = "NumberSign";
export declare const COLON_TOKEN_TYPE = "Colon";
export declare const COMMA_TOKEN_TYPE = "Comma";
export declare const PATH_SEGMENT_SEPARATOR_TOKEN_TYPE = "PathSegmentSeparator";
export declare const SINGLE_QUOTE_TOKEN_TYPE = "SingleQuote";
export declare const DOUBLE_QUOTE_TOKEN_TYPE = "DoubleQuote";
export declare const IDENTIFIER_START_TOKEN_TYPE = "IdentifierStart";
export declare const L_BRACKET_TOKEN_TYPE = "LBracket";
export declare const R_BRACKET_TOKEN_TYPE = "RBracket";
export declare const L_CURLY_TOKEN_TYPE = "LCurly";
export declare const R_CURLY_TOKEN_TYPE = "RCurly";
export declare const L_PAREN_TOKEN_TYPE = "LParen";
export declare const R_PAREN_TOKEN_TYPE = "RParen";
export declare const WHITE_SPACE_TOKEN_TYPE = "WhiteSpace";
export declare const NUMBER_TOKEN_TYPE = "Number";
export declare const NULL_TOKEN_TYPE = "Null";
export declare const TRUE_TOKEN_TYPE = "True";
export declare const FALSE_TOKEN_TYPE = "False";
export declare const BINARY_TOKEN_TYPE = "Binary";
export declare const DATE_TOKEN_TYPE = "Date";
export declare const TIME_TOKEN_TYPE = "Time";
export declare const TIMESTAMP_TOKEN_TYPE = "Timestamp";
export declare const SPREAD_OPERATOR = "SpreadOperator";
export declare const UP_TO_KEYWORD = "UpToKeyword";
export declare const OPERATOR = "Operator";
export declare const tokenMap: {
    Comment: import("chevrotain").TokenType;
    LineComment: import("chevrotain").TokenType;
    NumberSign: import("chevrotain").TokenType;
    Colon: import("chevrotain").TokenType;
    Comma: import("chevrotain").TokenType;
    PathSegmentSeparator: import("chevrotain").TokenType;
    SingleQuote: import("chevrotain").TokenType;
    DoubleQuote: import("chevrotain").TokenType;
    IdentifierStart: import("chevrotain").TokenType;
    LBracket: import("chevrotain").TokenType;
    RBracket: import("chevrotain").TokenType;
    LCurly: import("chevrotain").TokenType;
    RCurly: import("chevrotain").TokenType;
    LParen: import("chevrotain").TokenType;
    RParen: import("chevrotain").TokenType;
    WhiteSpace: import("chevrotain").TokenType;
    Number: import("chevrotain").TokenType;
    Binary: import("chevrotain").TokenType;
    Date: import("chevrotain").TokenType;
    Time: import("chevrotain").TokenType;
    Timestamp: import("chevrotain").TokenType;
    Null: import("chevrotain").TokenType;
    True: import("chevrotain").TokenType;
    False: import("chevrotain").TokenType;
    Identifier: import("chevrotain").TokenType;
    TermCastIdentifier: import("chevrotain").TokenType;
    DelimitedIdentifier: import("chevrotain").TokenType;
    QuotedIdentifier: import("chevrotain").TokenType;
    String: import("chevrotain").TokenType;
    StringExit: import("chevrotain").TokenType;
    QuotedIdentifierExit: import("chevrotain").TokenType;
    DelimitedIdentifierExit: import("chevrotain").TokenType;
    SpreadOperator: import("chevrotain").TokenType;
    UpToKeyword: import("chevrotain").TokenType;
    MultiLineString: import("chevrotain").TokenType;
    MultiLineStringExit: import("chevrotain").TokenType;
    MultiLineStringStripIndentExit: import("chevrotain").TokenType;
    Backtick: import("chevrotain").TokenType;
    TripleBacktick: import("chevrotain").TokenType;
    Operator: import("chevrotain").TokenType;
};
export declare const lexerDefinition: {
    modes: {
        default_mode: import("chevrotain").TokenType[];
        quoted_mode: import("chevrotain").TokenType[];
        delimited_mode: import("chevrotain").TokenType[];
        string_mode: import("chevrotain").TokenType[];
        multi_line_string_strip_indent_mode: import("chevrotain").TokenType[];
        multi_line_string_mode: import("chevrotain").TokenType[];
        expression_mode: import("chevrotain").TokenType[];
        delimited: never[];
    };
    defaultMode: string;
};
//# sourceMappingURL=tokens.d.ts.map