import type { CdsCompilerFacade } from '@sap/ux-cds-compiler-facade';
import type { Range } from '@sap-ux/odata-annotation-core-types';
import type { Annotation } from '@sap-ux/cds-annotation-parser';
import type { AstNode } from './document';
import type { CompilerToken } from './cds-compiler-tokens';
/**
 *  Normalizes URI.
 *
 * @param fileUri - URI as a string.
 * @param removeGhostFilePrefix - Flag indicating if the ghost file prefix should be removed from the uri.
 * @returns Normalized file URI.
 */
export declare function toUnifiedUri(fileUri: string | undefined, removeGhostFilePrefix?: boolean): string;
/**
 * Get token indices for the corresponding range.
 *
 * @param tokens - All tokens in the document.
 * @param range - Range for which tokens will be matched.
 * @returns Start and end token indices for the range.
 */
export declare function getTokenRange(tokens: CompilerToken[], range: Range): {
    start: number;
    end: number;
};
/**
 * Finds annotation in assignment based on AST node.
 *
 * @param facade - CDS compiler facade instance.
 * @param node - AST node.
 * @param parent - Parent AST node.
 * @param greatGrandParent - Great grand parent node.
 * @returns Annotation node and EDMX path.
 */
export declare function getAnnotationFromAssignment(facade: CdsCompilerFacade, node: AstNode, parent?: AstNode, greatGrandParent?: AstNode): [Annotation, string];
//# sourceMappingURL=utils.d.ts.map