"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.collectComments = void 0;
const odata_annotation_core_types_1 = require("@sap-ux/odata-annotation-core-types");
/**
 * Extracts comment tokens from all the tokens in document.
 *
 * @param tokenVector - XML Tokens.
 * @returns All the comments in the document.
 */
function collectComments(tokenVector) {
    const comments = [];
    for (const token of tokenVector) {
        // check for comment tokens
        if (token.tokenTypeIdx !== 3) {
            continue;
        }
        const range = getTokenRange(token);
        if (range) {
            comments.push({
                type: 'comment',
                value: token.image,
                range
            });
        }
    }
    return comments;
}
exports.collectComments = collectComments;
/**
 * Converts token ranges where lines and columns start with 1.
 *
 * @param token - XML Tokens.
 * @returns Range where lines and columns start with 0.
 */
function getTokenRange(token) {
    const startLine = token.startLine ?? -1;
    const startCharacter = token.startColumn ?? -1;
    const endLine = token.endLine ?? -1;
    const endCharacter = token.endColumn ?? -1;
    if (startLine === -1 || startCharacter === -1 || endLine === -1 || endCharacter === -1) {
        return undefined;
    }
    // tokens use 1 based counting system
    // end character is off by one
    return odata_annotation_core_types_1.Range.create(startLine - 1, startCharacter - 1, endLine - 1, endCharacter);
}
//# sourceMappingURL=comments.js.map