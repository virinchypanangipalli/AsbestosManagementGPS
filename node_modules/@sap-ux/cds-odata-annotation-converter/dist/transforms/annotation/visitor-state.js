"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.VisitorState = void 0;
/**
 * Contains current state of CDS annotation visitor
 */
class VisitorState {
    /**
     * @returns context
     */
    get context() {
        const context = this._contextStack[this._contextStack.length - 1];
        if (context) {
            return context;
        }
        return {};
    }
    /**
     * Gets the depth of the context stack.
     *
     * @type {number}
     * @returns The depth of the context stack represents the number of items.
     *              currently present in the stack.
     */
    get contextDepth() {
        return this._contextStack.length;
    }
    /**
     * @returns array of diagnostics array.
     */
    get diagnostics() {
        return this._diagnostics;
    }
    /**
     * Gets the set of paths stored in the instance.
     *
     * @type {Set<string>}
     * @readonly
     * @returns a set contains unique path strings.
     */
    get pathSet() {
        return this._pathSet;
    }
    /**
     *
     * @param vocabularyService - The vocabulary service associated with the instance.
     * @param [position] - The optional position associated with the instance.
     */
    constructor(vocabularyService, position) {
        this.vocabularyService = vocabularyService;
        this.position = position;
        this.elementStack = [];
        this._contextStack = [];
        this._diagnostics = [];
        this._pathSet = new Set();
    }
    // context
    /**
     *
     * @param context context.
     */
    pushContext(context) {
        this._contextStack.push(Object.seal({ ...context }));
    }
    popContext() {
        this._contextStack.splice(-1);
    }
    // collectors
    /**
     *
     * @param diagnostic - The diagnostic to be added.
     */
    addDiagnostic(diagnostic) {
        this._diagnostics.push(diagnostic);
    }
    /**
     *
     * @param path - The path to be added.
     */
    addPath(path) {
        this._pathSet.add(path);
    }
}
exports.VisitorState = VisitorState;
//# sourceMappingURL=visitor-state.js.map